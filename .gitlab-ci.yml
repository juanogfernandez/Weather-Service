stages:
  - test
  - build
  - deploy

variables:
  TAG_LATEST: $CI_REGISTRY_IMAGE/$CI_COMMIT_REF_NAME:latest
  TAG_COMMIT: $CI_REGISTRY_IMAGE/$CI_COMMIT_REF_NAME:$CI_COMMIT_SHORT_SHA
  APP: weather-service

build:
  image: docker:latest
  stage: build
  services:
    - docker:dind
  script:
    - docker build -t $TAG_LATEST -t $TAG_COMMIT .
    - docker login -u gitlab-ci-token $CI_JOB_TOKEN $CI_REGISTRY

deploy:
  image: alpine:latest
  stage: deploy
  tags:
    - deployment
  before_script:
    - chmod 600 $ID_RSA
    - apk update
    - apk add python3 py3-pip openssh-client
    - pip install docker-compose
    - docker-compose --version
  script:
    - |
      ssh -i $ID_RSA -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP << EOF
        docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
        docker pull $TAG_COMMIT

        if [ \$(docker ps -q -f name=${APP}) ]; then
          echo "Container ${APP} is running. Stopping and removing it..."
          docker stop ${APP}
          docker rm ${APP}
        fi

        cd /projects/${APP}
        docker compose up -d
      EOF
  environment:
    name: production
    url: https://${APP}.andes.coop.ar
  only:
    - main
